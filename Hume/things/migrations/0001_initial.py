# Generated by Django 5.1.2 on 2024-10-20 12:49

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Districts',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('district_name', models.CharField(max_length=50)),
                ('boundary', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('state_name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Panjayath',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('panjayath_name', models.CharField(max_length=100)),
                ('boundary', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.districts')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.states')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='districts',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.states'),
        ),
        migrations.CreateModel(
            name='Things',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('thing_type', models.CharField(choices=[('RAIN_GAUGE', 'Rain Gauge'), ('TEMPERATURE_GAUGE', 'Temperature Gauge'), ('RAIN_TEMP_GAUGE', 'Rain Temp Gauge')], default='RAIN_TEMP_GAUGE', max_length=50)),
                ('location_cordinate', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('is_active', models.BooleanField(default=True)),
                ('collector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_things', to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.districts')),
                ('panjayath', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.panjayath')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.states')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThingsReadings',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reading_from', models.DateTimeField()),
                ('freading_till', models.DateTimeField(auto_now_add=True)),
                ('rain_reading', models.FloatField(blank=True, null=True)),
                ('temp_reading', models.FloatField(blank=True, null=True)),
                ('thing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readings', to='things.things')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ward_name', models.CharField(max_length=100)),
                ('boundary', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.districts')),
                ('panjayath', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.panjayath')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.states')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='things',
            name='ward',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.ward'),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location_name', models.CharField(max_length=100)),
                ('boundary', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.districts')),
                ('panjayath', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.panjayath')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.states')),
                ('ward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='things.ward')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
    ]
